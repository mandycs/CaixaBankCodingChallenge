version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      smtp:
        condition: service_started
    environment:
      MAIL_SERVER: smtp
      MAIL_PORT: 1025
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DB: bankingapp
      SQLALCHEMY_DATABASE_URI: mysql+pymysql://root:root@mysql:3306/bankingapp
    networks:
      - finservice_network
    restart: always
    command: >
      bash -c "
      /wait-for-mysql.sh &&
      if [ ! -d '/app/migrations' ]; then
        flask db init && flask db migrate -m 'Initial migration';
      fi;
      flask db upgrade && gunicorn --bind 0.0.0.0:3000 'app:create_app()'"

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: bankingapp             
      MYSQL_ROOT_PASSWORD: root              
    ports:
      - "3306:3306"                          
    networks:
      - finservice_network
    restart: always
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  smtp:
    image: mailhog/mailhog
    container_name: smtp
    ports:
      - "1025:1025"  # MailHog SMTP port
      - "8025:8025"  # MailHog Web interface for viewing mails
    networks:
      - finservice_network
    restart: always

networks:
  finservice_network:
    driver: bridge
